datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String    @id @default(cuid())
  avatar      String    @default("https://cdns.iconmonstr.com/wp-content/assets/preview/2017/96/iconmonstr-user-32.png")
  username    String    @unique
  email       String    @unique
  firstName   String    @default("")
  lastName    String
  bio         String
  following   User[]    @relation("FollowUser", references: [id])
  follower    User[]    @relation("FollowUser", references: [id])
  posts       Post[]
  likes       Like[]
  comments    Comment[]
  rooms       Room[]
  sendMessage Message[] @relation("SendMessage")
  getMessage  Message[] @relation("GetMessage")
  loginSecret String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Post {
  id        String    @id @default(cuid())
  location  String?
  caption   String
  user      User      @relation(fields: [userId], references: [id])
  files     File[]
  likes     Like[]
  comments  Comment[]
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Like {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  userId    String
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique(fields: [userId, postId], name: "likeRelation")
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  userId    String
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id        String   @id @default(cuid())
  url       String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id           String    @id @default(cuid())
  participants User[]
  messages     Message[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Message {
  id        String   @id @default(cuid())
  from      User     @relation("SendMessage", fields: [fromId], references: [id])
  fromId    String
  to        User     @relation("GetMessage", fields: [toId], references: [id])
  toId      String
  text      String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
